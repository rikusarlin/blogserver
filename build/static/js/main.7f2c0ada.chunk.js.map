{"version":3,"sources":["utils.js","services/blogs.js","reducers/blogReducer.js","components/Blogs.js","reducers/notificationReducer.js","hooks/index.js","components/Blog.js","services/users.js","reducers/userReducer.js","components/Users.js","components/User.js","services/login.js","reducers/loginReducer.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","components/NewBlog.js","App.js","store.js","index.js"],"names":["prop","baseUrl","process","getAll","token","a","config","headers","axios","get","response","data","create","newBlog","post","update","updatedBlog","put","id","deleteBlog","delete","comment","reducer","state","action","console","log","type","map","blog","filter","mapDispatchToProps","fetchBlogs","dispatch","blogService","blogs","length","connect","user","props","getBlogs","useEffect","blogList","sort","b","likes","key","data-cy","to","title","Table","striped","initialState","message","showInfo","timeoutSec","showNotification","setTimeout","hideNotification","showError","notificationReducer","useField","useState","value","setValue","onChange","event","target","reset","removeReset","likeBlog","blogToLike","content","blogId","commentBlog","Blog","withRouter","undefined","handleComment","preventDefault","newComment","exception","handleLike","author","url","handleDelete","history","push","commentList","comments","commentForm","onSubmit","className","username","onClick","window","confirm","href","name","fetchUsers","userService","users","getUsers","userList","User","login","credentials","password","loginService","LoginForm","userName","passWord","handleLogin","htmlFor","notification","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","createBlog","blogFormRef","createRef","handlePost","current","logout","emptyBlogList","handleLogout","exact","path","render","match","params","find","combineReducers","blogReducer","loginReducer","userReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7f2c0ada.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\nconst removeProperty = prop => ({ [prop]: _, ...rest }) => rest\nexport const removeReset = removeProperty('reset')","import axios from 'axios'\nconst baseUrl = process.env.REACT_APP_BACKEND_URL + '/api/blogs'\n\nconst getAll = async (token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` },\n  }\n  //console.log(\"blogs service, getAll(), config:\",config)\n  const response = await axios.get(baseUrl, config)\n  //console.log(\"Response.data from getAll(): \",response.data)\n  return response.data\n}\n\nconst create = async (newBlog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` },\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (updatedBlog, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` },\n  }\n  const response = await axios.put(baseUrl+'/'+updatedBlog.id, updatedBlog, config)\n  return response.data\n}\n\nconst deleteBlog = async (id, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` },\n  }\n  const response = await axios.delete(baseUrl+'/'+id,config)\n  return response.data\n}\n\nconst comment = async (id, comment, token) => {\n  const config = {\n    headers: { 'Authorization': `bearer ${token}` },\n  }\n  const response = await axios.post(baseUrl+'/'+id+'/comments',comment,config)\n  return response.data\n}\n\nexport default { getAll, create, update, deleteBlog, comment }","import blogService from '../services/blogs'\n\nexport const likeBlog = (blogToLike, token) => {\n  return async dispatch => {\n    const content = {\n      ...blogToLike,\n      likes: blogToLike.likes +1\n    }\n    const updatedBlog = await blogService.update(content, token)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: updatedBlog\n    })\n  }\n}\n\nexport const commentBlog = (id, comment, token) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.comment(id, comment, token)\n    dispatch({\n      type: 'COMMENT_BLOG',\n      data: updatedBlog\n    })\n  }\n}\n\nexport const deleteBlog = (blogId, token) => {\n  return async dispatch => {\n    const response = await blogService.deleteBlog(blogId, token)\n    console.log(`In deleteBlog (id ${blogId}), response: ${response}`)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogId\n    })\n  }\n}\n\nexport const createBlog = (content, token) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content, token)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const fetchBlogs = (token) => {\n  console.log('In blogReducer.fetchBlogs, token: ',token)\n  return async dispatch => {\n    const blogs = await blogService.getAll(token)\n    console.log('Blogs.length: ',blogs.length)\n    dispatch({\n      type: 'FETCH_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const emptyBlogList = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'EMPTY_BLOG_LIST',\n      data: null,\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  console.log('state before action in blogReducer: ', state)\n  console.log('action in blogReducer', action)\n\n  switch(action.type) {\n  case 'NEW_BLOG':\n    return [...state, action.data]\n  case 'LIKE_BLOG':\n  case 'COMMENT_BLOG':\n    return state.map(blog =>\n      blog.id !== action.data.id ? blog : action.data\n    )\n  case 'DELETE_BLOG':\n    return state.filter(blog =>\n      blog.id !== action.data\n    )\n  case 'FETCH_BLOGS':\n    return action.data\n  case 'EMPTY_BLOG_LIST':\n    return null\n  default:\n    return state\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\nimport { fetchBlogs } from '../reducers/blogReducer'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nexport const Blogs = (props) => {\n  var token=props.user.token\n  var getBlogs = props.fetchBlogs\n  useEffect(() => {\n    getBlogs(token)\n  }, [token, getBlogs])\n\n  // const filteredBlogs = blogs.filter(blog => blog.author.toUpperCase().indexOf(filterValue.toUpperCase()) >= 0)\n  //console.log(\"props.blogs: \",props.blogs)\n  if(props.blogs !== null){\n    const sortedBlogs = props.blogs.sort((a,b) => b.likes - a.likes )\n    const blogList = sortedBlogs.map(blog =>\n      <tr key={blog.id}>\n        <td>\n          <Link data-cy=\"blog-link\" to={`/blogs/${blog.id}`}>{blog.title}</Link>\n        </td>\n      </tr>\n    )\n\n    if(props.user.user !== null){\n      return(\n        <Table striped>\n          <tbody>\n            {blogList}\n          </tbody>\n        </Table>\n      )\n    }\n  }\n  return(<div/>)\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchBlogs\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Blogs)\n","const initialState = {\n  type: 'EMPTY',\n  message: ''\n}\n\nexport const showInfo = (message, timeoutSec) => {\n  return async dispatch => {\n    await dispatch(showNotification(message, 'INFO'))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, timeoutSec * 1000)\n  }\n}\n\nexport const showError = (message, timeoutSec) => {\n  return async dispatch => {\n    await dispatch(showNotification(message, 'ERROR'))\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, timeoutSec * 1000)\n  }\n}\n\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE',\n    data: { }\n  }\n}\n\nexport const showNotification = (message, type) => {\n  return {\n    type: 'SHOW',\n    data: {\n      message: message,\n      type: type\n    }\n  }\n}\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('state before action in notificationReducer: ', state)\n  console.log('action in notificationReducer', action)\n\n  switch(action.type) {\n  case 'SHOW':\n    state = action.data\n    return state\n  case 'HIDE':\n    state = initialState\n    return state\n  default:\n    return state\n  }\n}\n\nexport default notificationReducer","import { useState } from 'react'\n\nexport const useField = (type) => {  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}","import React from 'react'\nimport { showInfo, showError } from '../reducers/notificationReducer'\nimport { likeBlog, deleteBlog, commentBlog } from '../reducers/blogReducer'\nimport  { useField } from '../hooks'\nimport { removeReset } from '../utils'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nexport const BlogNoHistory = (props)  => {\n  const comment = useField('text')\n\n  if ( props.blog === undefined || props.blog === null){\n    return <div/>\n  }\n\n  const handleComment = async (event) => {\n    event.preventDefault()\n\n    try {\n      const newComment = {\n        comment: comment.value\n      }\n      props.commentBlog(props.blog.id, newComment, props.user.token)\n      comment.reset()\n      props.showInfo(`commented on blog '${props.blog.title}'`, 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in commenting blog', 3)\n    }\n  }\n\n\n  const handleLike = async (event) => {\n    event.preventDefault()\n\n    try {\n      const updatedBlog = {\n        id: props.blog.id,\n        title: props.blog.title,\n        author: props.blog.author,\n        url: props.blog.url,\n        likes: props.blog.likes\n      }\n      props.likeBlog(updatedBlog, props.user.token)\n      props.showInfo('liked a blog', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in updating likes', 3)\n    }\n  }\n\n  const handleDelete = async () => {\n    try {\n      props.deleteBlog(props.blog.id, props.user.token)\n      props.showInfo('blog deleted', 3)\n      props.history.push('/blogs')\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in deleting blog', 3)\n    }\n  }\n\n  const confirmDelete = () => {\n    if(window.confirm(`remove blog ${props.blog.title} by ${props.blog.author}?`)){\n      handleDelete()\n    }\n\n  }\n\n  const commentList = props.blog.comments.map(comment =>\n    <li key={comment}>{comment}</li>\n  )\n\n  const commentForm =\n    <form onSubmit={handleComment}>\n      <div className=\"form-group row\">\n        <input className=\"col-sm-3\" {...removeReset(comment)}/>\n        <button type=\"submit\" className=\"btn btn-primary\">add comment</button>\n      </div>\n    </form>\n\n\n  if(props.user.username !== null){\n\n    let deleteBlog = <button className=\"btn btn-danger\" type=\"button\" onClick={confirmDelete}>delete</button>\n    if(props.user.username !== props.blog.user.username){\n      deleteBlog = <div/>\n    }\n\n    let comments =\n      <div>\n        <b>Comments</b><br/>\n        {commentForm}\n        <ul>\n          {commentList}\n        </ul>\n      </div>\n    if(props.blog.comments.length <= 0){\n      comments =\n        <div>\n          <b>No comments yet</b>\n          {commentForm}\n        </div>\n    }\n\n    return(\n      <div className=\"blog\">\n        <div>\n          <h2>{props.blog.title} {props.blog.author}</h2>\n          <a href={props.blog.url}>{props.blog.url}</a> <br/>\n          <form onSubmit={handleLike}>\n            {props.blog.likes} likes <button className=\"btn btn-primary\" data-cy=\"like\" type=\"submit\">like</button><br/>\n          </form>\n          added by {props.blog.user.name}<br/>\n          {deleteBlog}<br/>\n          {comments}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  showInfo, showError, likeBlog, deleteBlog, commentBlog\n}\n\nconst Blog = withRouter(BlogNoHistory)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Blog)\n","import axios from 'axios'\nconst baseUrl = process.env.REACT_APP_BACKEND_URL + '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getAll }","import userService from '../services/users'\n\nexport const fetchUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'FETCH_USERS',\n      data: users,\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  console.log('state before action in userReducer: ', state)\n  console.log('action in userReducer', action)\n\n  switch(action.type) {\n  case 'FETCH_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { fetchUsers } from '../reducers/userReducer'\nimport { connect } from 'react-redux'\nimport { Table } from 'react-bootstrap'\n\n\nexport const Users = (props) => {\n  var user=props.user.username\n  var getUsers = props.fetchUsers\n  useEffect(() => {\n    getUsers()\n  }, [user, getUsers])\n\n  // const filteredBlogs = blogs.filter(blog => blog.author.toUpperCase().indexOf(filterValue.toUpperCase()) >= 0)\n  //console.log(\"props.users: \",props.users)\n  if(props.users !== null){\n    const sortedUsers = props.users.sort((a,b) => b.name - a.name )\n    const userList = sortedUsers.map(user =>\n      <tr key={user.id}>\n        <td className=\"col-sm-1\"><Link to={`/users/${user.id}`}>{user.name}</Link></td>\n        <td className=\"col-sm-2\">{ user.blogs.length }</td>\n      </tr>\n    )\n    if(props.user.username !== null){\n      return(\n        <Table striped>\n          <thead>\n            <tr><th className=\"col-sm-1\"/><th className=\"col-sm-2\">blogs created</th></tr>\n          </thead>\n          <tbody>\n            {userList}\n          </tbody>\n        </Table>\n      )\n    } else {\n      return(<div/>)\n    }\n  } else {\n    return (<div>No users found</div>)\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchUsers\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\n\nconst UserNoHistory = (props) => {\n  if ( props.user === undefined){\n    props.history.push('/blogs')\n    return <div/>\n  }\n\n  const blogList = props.user.blogs.map(blog =>\n    <tr key={blog.id}><td>{blog.title}</td></tr>\n  )\n\n  return (\n    <div>\n      <h2>{props.user.name}</h2>\n      <h3>added blogs</h3>\n      <Table striped>\n        <tbody>\n          {blogList}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst User = withRouter(UserNoHistory)\n\nexport default User\n","import axios from 'axios'\nconst baseUrl = process.env.REACT_APP_BACKEND_URL + '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\n\nconst initialState = {\n  username: null,\n  name: null,\n  token: null\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login(\n      { username: username,\n        password: password })\n    dispatch({\n      type: 'LOGIN',\n      data: {\n        username: user.username,\n        name: user.name,\n        token: user.token\n      }\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'LOGOUT',\n      data: initialState\n    })\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  console.log('state before action in loginReducer: ', state)\n  console.log('action in login Reducer', action)\n\n  switch(action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../reducers/loginReducer'\nimport { showInfo, showError } from '../reducers/notificationReducer'\nimport  { useField } from '../hooks'\nimport { removeReset } from '../utils'\nimport { withRouter } from 'react-router-dom'\n\nexport const LoginFormNoHistory = (props) => {\n  const userName = useField('text')\n  const passWord = useField('password')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = userName.value\n      const password = passWord.value\n      props.login(username, password)\n      userName.reset()\n      passWord.reset()\n      props.showInfo('login successful', 3)\n      // Always begin with a known address\n      props.history.push('/blogs')\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('wrong username or password',3)\n    }\n  }\n\n  return (\n    <div>\n      <h3>Login</h3>\n      <form onSubmit={handleLogin}>\n        <div className=\"form-group row\">\n          <label htmlFor=\"Username\" className=\"col-sm-1 col-form-label\">Username</label>\n          <div className=\"col-sm-3\">\n            <input className=\"form-control\" data-cy=\"username\" {...removeReset(userName)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"Password\" className=\"col-sm-1 col-form-label\">Password</label>\n          <div className=\"col-sm-3\">\n            <input className=\"form-control\" data-cy=\"password\" {...removeReset(passWord)} />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\" data-cy=\"login\">login</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  login, showInfo, showError\n}\n\nconst LoginForm = withRouter(LoginFormNoHistory)\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(LoginForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Notification = (props) => {\n  const notification = props.notification\n  if(notification.message === null){\n    return (\n      <div/>\n    )\n  } else {\n    if(notification.type === 'INFO'){\n      return(\n        <div className=\"info\">\n          {notification.message}\n        </div>\n      )\n    } else if(notification.type === 'ERROR'){\n      return(\n        <div className=\"error\">\n          {notification.message}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          {notification.message}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('Notification, current state: ',state)\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Notification)\n","import React, { useState, useImperativeHandle } from 'react'\n\n// eslint-disable-next-line react/display-name\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility} data-cy={props.buttonLabel} className=\"btn btn-primary\">{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility} className=\"btn btn-primary\">cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React from 'react'\nimport Togglable from './Togglable'\nimport { showInfo, showError } from '../reducers/notificationReducer'\nimport { createBlog } from '../reducers/blogReducer'\nimport { connect } from 'react-redux'\nimport  { useField } from '../hooks'\nimport { removeReset } from '../utils'\n\n\nexport const NewBlog = (props) => {\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n\n  const blogFormRef = React.createRef()\n\n  const handlePost = async (event) => {\n    event.preventDefault()\n\n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = {\n        title: title.value,\n        author: author.value,\n        url: url.value\n      }\n      props.createBlog(newBlog, props.user.token)\n      url.reset()\n      title.reset()\n      author.reset()\n      props.showInfo('added new blog', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in adding new blog', 3)\n    }\n  }\n\n  return (\n    <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n      <div>\n        <h3>New blog</h3>\n        <form onSubmit={handlePost}>\n          <div className=\"form-group row\">\n            <label htmlFor=\"Title\" className=\"col-sm-1 col-form-label\">Title</label>\n            <input className=\"col-sm-5\" data-cy=\"title\" {...removeReset(title)}/>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"Author\" className=\"col-sm-1 col-form-label\">Author</label>\n            <input className=\"col-sm-5\" data-cy=\"author\" {...removeReset(author)}/>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"URL\" className=\"col-sm-1 col-form-label\">URL</label>\n            <input className=\"col-sm-5\" data-cy=\"url\" {...removeReset(url)}/>\n          </div>\n          <button type=\"submit\" data-cy=\"create\" className=\"btn btn-primary\">create</button>\n        </form>\n      </div>\n    </Togglable>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  createBlog, showInfo, showError\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewBlog)\n","import React from 'react'\nimport './App.css'\nimport Blogs from './components/Blogs'\nimport Blog from './components/Blog'\nimport Users from './components/Users'\nimport User from './components/User'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport NewBlog from './components/NewBlog'\nimport {\n  BrowserRouter as Router,\n  Route, Link\n} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from './reducers/loginReducer'\nimport { showInfo, showError } from './reducers/notificationReducer'\nimport { emptyBlogList } from './reducers/blogReducer'\n\nexport const App = (props) => {\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      props.logout()\n      props.emptyBlogList()\n      props.showInfo('logout successful', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in logout', 3)\n    }\n  }\n\n  const logoutForm = () => (\n    <button type=\"button\" onClick={handleLogout} className=\"btn btn-primary my-2 my-sm-0\">logout</button>\n  )\n\n  const userById = (id) => {\n    if(props.user !== null) {\n      return props.users.find(a => a.id === id)\n    } else {\n      return null\n    }\n  }\n\n  const blogById = (id) => {\n    if(props.blogs !== null) {\n      return props.blogs.find(a => a.id === id)\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        {props.user.username !== null ?\n          <div>\n            <div>\n              <div className=\"navbar navbar-expand-lg\">\n                <div className=\"navbar-nav navbar-light bg-light\">\n                  <div className=\"nav-item\">\n                    <Link  className=\"nav-link\" to=\"/\">blogs</Link>\n                  </div>\n                  <div className=\"nav-item\">\n                    <Link  className=\"nav-link\" to=\"/users\">users</Link>\n                  </div>\n                  <div className=\"nav-item\">\n                    {props.user.name } logged in {logoutForm()}\n                  </div>\n                </div>\n              </div>\n              <Notification/>\n              <div>\n                <h2>Blog app</h2>\n              </div>\n              <Route exact path=\"/\" render={() =>\n                <div>\n                  <NewBlog/>\n                  <Blogs/>\n                </div>\n              } />\n              <Route exact path=\"/blogs\" render={() =>\n                <div>\n                  <NewBlog/>\n                  <Blogs/>\n                </div>\n              } />\n              <Route exact path=\"/users\" render={() => <Users />} />\n              <Route exact path=\"/users/:id\" render={({ match }) =>\n                <User\n                  user={userById(match.params.id)}\n                />\n              } />\n              <Route exact path=\"/blogs/:id\" render={({ match }) =>\n                <Blog\n                  blog={blogById(match.params.id)}\n                />\n              } />\n            </div>\n          </div>\n          :\n          <div>\n            <h2>Blog app</h2>\n            <Notification/>\n            <LoginForm/>\n          </div>\n        }\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    users: state.users,\n    blogs: state.blogs\n  }\n}\n\nconst mapDispatchToProps = {\n  logout, showInfo, showError, emptyBlogList\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: loginReducer,\n  users: userReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import 'bootstrap/dist/css/bootstrap.min.css'\n// eslint-disable-next-line no-unused-vars\nimport $ from 'jquery'\n// eslint-disable-next-line no-unused-vars\nimport Popper from 'popper.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}